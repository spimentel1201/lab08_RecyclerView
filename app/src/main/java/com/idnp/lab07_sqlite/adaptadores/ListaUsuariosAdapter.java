package com.idnp.lab07_sqlite.adaptadores;import android.content.Context;import android.content.Intent;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.idnp.lab07_sqlite.R;import com.idnp.lab07_sqlite.VerActivity;import com.idnp.lab07_sqlite.entidades.Usuarios;import java.util.ArrayList;import java.util.List;import java.util.stream.Collectors;public class ListaUsuariosAdapter extends RecyclerView.Adapter<ListaUsuariosAdapter.UsuarioViewHolder> {    ArrayList<Usuarios> listaUsuarios;    ArrayList<Usuarios> listaOriginal;    public ListaUsuariosAdapter(ArrayList<Usuarios> listaUsuarios) {        this.listaUsuarios = listaUsuarios;        listaOriginal = new ArrayList<>();        listaOriginal.addAll(listaUsuarios);    }    @NonNull    @Override    public UsuarioViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.lista_item_usuario, null, false);        return new UsuarioViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull UsuarioViewHolder holder, int position) {        holder.viewNombre.setText(listaUsuarios.get(position).getNombres());        //holder.viewApellido.setText(listaUsuarios.get(position).getApellidos());        holder.viewTelefono.setText(listaUsuarios.get(position).getTelefono());        holder.viewDni.setText(listaUsuarios.get(position).getDni());        holder.viewCorreo.setText(listaUsuarios.get(position).getCorreo_electronico());    }    public void filtrado(final String txtBuscar) {        int longitud = txtBuscar.length();        if (longitud == 0) {            listaUsuarios.clear();            listaUsuarios.addAll(listaOriginal);        } else {            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {                List<Usuarios> collecion = listaUsuarios.stream()                        .filter(i -> i.getNombres().toLowerCase().contains(txtBuscar.toLowerCase()))                        .collect(Collectors.toList());                listaUsuarios.clear();                listaUsuarios.addAll(collecion);            } else {                for (Usuarios c : listaOriginal) {                    if (c.getNombres().toLowerCase().contains(txtBuscar.toLowerCase())) {                        listaUsuarios.add(c);                    }                }            }        }        notifyDataSetChanged();    }    @Override    public int getItemCount() {        return listaUsuarios.size();    }    public class UsuarioViewHolder extends RecyclerView.ViewHolder {        TextView viewNombre, viewApellido, viewTelefono, viewDni, viewCorreo;        public UsuarioViewHolder(@NonNull View itemView) {            super(itemView);            viewNombre = itemView.findViewById(R.id.viewNombre);            //viewApellido = itemView.findViewById(R.id.viewApellidos);            viewTelefono = itemView.findViewById(R.id.viewTelefono);            viewDni = itemView.findViewById(R.id.viewDni);            viewCorreo = itemView.findViewById(R.id.viewCorreo);            itemView.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    Context context = view.getContext();                    Intent intent = new Intent(context, VerActivity.class);                    intent.putExtra("ID", listaUsuarios.get(getAdapterPosition()).getId());                    context.startActivity(intent);                }            });        }    }}